(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{230:function(t,n,e){"use strict";e.r(n);var a=e(0),l=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"快速开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" 快速开始")]),t._v(" "),e("blockquote",[e("p",[t._v("此处简单介绍一个Kettle流程能完成的工作，对于详细的操作，将会再其他章节介绍。如果你对Kettle对基本概念不感兴趣或者你已经对Kettle比较熟悉，\n现在仅需要参考Kettle中各个步骤的使用，可以直接跳到"),e("router-link",{attrs:{to:"/step/transformationStep.html"}},[t._v("转换步骤")]),t._v(".")],1)]),t._v(" "),e("h2",{attrs:{id:"下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[t._v("#")]),t._v(" 下载")]),t._v(" "),e("blockquote",[e("p",[t._v("注意：kettle是免安装的，所以下载解压即可以使用，以下为下载解压的过程。需要注意的是，kettle使用Java开发，所以需要提前安装好Java环境，\n这里不会去说明Java环境的安装方法，不熟悉的朋友可以自行百度或谷歌。")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("可以通过"),e("a",{attrs:{href:"https://sourceforge.net/projects/pentaho/files/Data%20Integration/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网下载地址"),e("OutboundLink")],1),t._v(" 下载需要的版本。")])]),t._v(" "),e("li",[e("p",[t._v("在官方的下载界面，可以通过点击"),e("code",[t._v("Download Latest Version")]),t._v(" 来下载最新版，如下图所示。\n"),e("img",{attrs:{src:"image/latest.png",alt:"最新版"}})])]),t._v(" "),e("li",[e("p",[t._v("如果你需要其他的历史版本，也可以在界面上的版本列表中选择需要的版本来下载。\n"),e("img",{attrs:{src:"image/kettle-download-list.png",alt:"版本列表"}})])]),t._v(" "),e("li",[e("p",[t._v("Kettle下载完成以后，直接解压，会出现一个"),e("code",[t._v("data-integration")]),t._v(" 目录，该目录就是Kettle工具的根目录。")])])]),t._v(" "),e("h2",{attrs:{id:"kettle目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kettle目录"}},[t._v("#")]),t._v(" Kettle目录")]),t._v(" "),e("p",[t._v("由于Kettle目录文件比较多，这里仅对一、二级目录对内容做简要介绍，其中部分目录文件未做显示。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".\n├── Carte.bat\n├── Data\\ Integration.app\n│   ├── Contents\n│   └── Icon_\n├── Data\\ Service\\ JDBC\\ Driver\n│   └── pdi-dataservice-driver-bundle-7.1.0.0-12.zip\n├── Encr.bat\n├── Import.bat\n├── Kitchen.bat\n├── LICENSE.txt\n├── Pan.bat\n├── PentahoDataIntegration_OSS_Licenses.html\n├── README.txt\n├── Spark-app-builder.bat\n├── Spoon.bat\n├── SpoonConsole.bat\n├── SpoonDebug.bat\n├── SpoonDebug.sh\n├── adaptive-execution\n│   ├── bin\n│   ├── data\n│   ├── deploy\n│   ├── etc\n│   ├── jaas\n│   ├── keytab\n│   ├── lib\n│   ├── pdi-daemon\n│   ├── setenv\n│   └── system\n├── carte.sh\n├── classes\n│   ├── kettle-lifecycle-listeners.xml\n│   ├── kettle-registry-extensions.xml\n│   ├── log4j.xml\n│   └── mondrian.properties\n├── docs\n│   ├── English\n│   └── README.txt\n├── encr.sh\n├── hs_err_pid13093.log\n├── hs_err_pid6224.log\n├── hs_err_pid6567.log\n├── import-rules.xml\n├── import.sh\n├── kitchen.sh\n├── launcher\n│   ├── kettle.cfg.xml\n│   ├── launcher.properties\n│   └── pentaho-application-launcher-7.1.0.0-12.jar\n├── lib\n│   \n├── libswt\n│   ├── linux\n│   ├── osx64\n│   ├── win32\n│   └── win64\n├── logs\n│   └── spoon.log\n├── pan.sh\n├── plugins\n│   ├── VerticaBulkLoader\n│   ├── elasticsearch-bulk-insert-plugin\n│   ├── elasticsearch-bulk-insert-plugin.zip\n│   ├── platform-utils-plugin\n│   └── teradata-tpt-bulk-loader\n├── purge-utility.bat\n├── purge-utility.sh\n├── pwd\n│   ├── carte-config-8081.xml\n│   ├── carte-config-8082.xml\n│   ├── carte-config-8083.xml\n│   ├── carte-config-8084.xml\n│   ├── carte-config-master-8080.xml\n│   └── kettle.pwd\n├── runSamples.bat\n├── runSamples.sh\n├── samples\n│   ├── db\n│   ├── jobs\n│   └── transformations\n├── set-pentaho-env.bat\n├── set-pentaho-env.sh\n├── simple-jndi\n│   └── jdbc.properties\n├── spark-app-builder.sh\n├── spoon.command\n├── spoon.ico\n├── spoon.png\n├── spoon.sh\n├── system\n│   ├── karaf\n│   ├── mondrian\n│   └── osgi\n├── ui\n│   ├── browser-toolbar.xul\n│   ├── images\n│   ├── import-rules-toolbar.xul\n│   ├── job-graph.xul\n│   ├── job-history-toolbar.xul\n│   ├── job-log-toolbar.xul\n│   ├── laf.properties\n│   ├── main_perspective_overlay.xul\n│   ├── menubar.xul\n│   ├── spoon.xul\n│   ├── trans-grid-toolbar.xul\n│   ├── trans-history-toolbar.xul\n│   ├── trans-log-toolbar.xul\n│   ├── trans-preview-toolbar.xul\n│   └── trans-toolbar.xul\n└── yarn.sh\n\n")])])]),e("ul",[e("li",[t._v("以上为kettle7.1 版本完整的一级目录以及目录下的文件(lib、plugins目录部分文件未显示)，此处选择部分常用的目录/文件进行介绍。")]),t._v(" "),e("li",[t._v("目录\n"),e("ul",[e("li",[t._v("lib目录，顾名思义，lib目录下存放kettle运行时所需要的依赖库，比如需要连接数据库的JDBC驱动、自己打包的Jar文件等")]),t._v(" "),e("li",[t._v("plugins目录，此目录用于存放kettle插件，比如需要连接ES和ES进行数据交换的插件、Kafka消费者插件等，也可以自己开发所需的插件，\n放置在此目录下。"),e("a",{attrs:{href:""}},[t._v("了解如何开发自定义插件")])])])]),t._v(" "),e("li",[t._v("文件\n"),e("ul",[e("li",[e("code",[t._v("spoon.sh")]),t._v("、"),e("code",[t._v("spoon.bat")]),t._v(" 分别用于在不同的系统启动图形化界面，当使用Linux或者Mac系统时，可以执行"),e("code",[t._v("spoon.sh")]),t._v("来启动，\n在Windows操作系统则需要双击"),e("code",[t._v("spoon.bat")]),t._v("文件来启动")])])]),t._v(" "),e("li",[t._v("待完善")])]),t._v(" "),e("h2",{attrs:{id:"源码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[t._v("#")]),t._v(" 源码")]),t._v(" "),e("p",[t._v("kettle目前已经在"),e("strong",[t._v("Github")]),t._v("上开源，如有需要更加深入的学习了解，建议查看"),e("a",{attrs:{href:"https://github.com/pentaho/pentaho-kettle",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码"),e("OutboundLink")],1),t._v("进行学习。")]),t._v(" "),e("h2",{attrs:{id:"国际惯例，第一个kettle作业"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#国际惯例，第一个kettle作业"}},[t._v("#")]),t._v(" 国际惯例，第一个Kettle作业")]),t._v(" "),e("ul",[e("li",[t._v("下面是一个Kettle作业，其中包括一个 "),e("code",[t._v("start")]),t._v(" 一个"),e("code",[t._v("成功")]),t._v(",和一个 "),e("code",[t._v("转换")]),t._v(" 共三个组件,一般情况下，作业都是由"),e("code",[t._v("start")]),t._v("组件开始，"),e("code",[t._v("成功")]),t._v(" 或\n"),e("code",[t._v("success")]),t._v("组件结束；而实际对数据的处理，则是在作业中调用的 "),e("code",[t._v("转换")]),t._v("来完成的。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"image/first-job.png",alt:""}})]),t._v(" "),e("ul",[e("li",[e("p",[t._v("下面是一个Kettle的转换，在Kettle中，转换用于实际的数据处理，各个组件并发独立运行，在启动转换的后，相当于每一个子步骤都是开启的单独的监听，\n监听从上一步通过"),e("code",[t._v("跳")]),t._v("传来的数据，处理完以后，在通过"),e("code",[t._v("跳")]),t._v("传递到下一个步骤，直至所有步骤监听不到数据流，则转换停止。")])]),t._v(" "),e("li",[e("p",[t._v("在下面这个转换中，共有"),e("code",[t._v("表输入")]),t._v("、"),e("code",[t._v("表输出")]),t._v("、"),e("code",[t._v("Java代码")]),t._v("（Kettle里面的java脚本）、"),e("code",[t._v("错误信息输出")]),t._v("四个子步骤；每个步骤完成如下所述的任务：")]),t._v(" "),e("ul",[e("li",[t._v("表输入：负责从A表加载数据")]),t._v(" "),e("li",[t._v("表输出：负责获取表输入传递的数据，输出到Mysql的B表中。")]),t._v(" "),e("li",[t._v("Java代码：负责处理错误信息，Java代码与表输出之间的连接"),e("code",[t._v("跳")]),t._v('执行条件为"当上一步执行结果为假时",也就是说，当表输出出现错误时，会将错误的信息\n传给下一步，Java脚本获取到错误数据，进行自定义的处理以后，将错误信息传递到下一步：错误信息输出。')]),t._v(" "),e("li",[t._v("错误信息输出：负责获取Java脚本传递过来的错误信息，然后存到数据库中。")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"image/first-tran.png",alt:""}})]),t._v(" "),e("ul",[e("li",[t._v("现在在作业中启动，执行结果如下图,则表示作业运行成功。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"image/first-job-result.png",alt:""}})])])}),[],!1,null,null,null);n.default=l.exports}}]);